[binaries]
c = 'clang'
cpp = 'clang++'
c_ld = 'lld'
cpp_ld = 'lld'
nasm = 'nasm'

[built-in options]
c_args = ['-target',
 'x86_64-unknown-elf',
  '-fno-stack-check',
   '-fno-stack-protector',
    '-fno-pic',
     '-fno-pie',
      '-mcmodel=kernel',
      '-mabi=sysv',
      '-mno-80387',
        '-mno-mmx',
        '-mno-3dnow',
        '-mno-sse',
        '-mno-sse2',
        '-mno-ssse3',
        '-mno-sse4',
        '-mno-sse4a',
        '-mno-sse4.1',
        '-mno-sse4.2',
        '-mno-avx',
        '-mno-avx2',
        '-mno-avx512f',
        '-mno-red-zone',
      ]
cpp_args = ['-target', 'x86_64-unknown-elf', '-fno-stack-check', '-fno-stack-protector', '-fno-pic', '-fno-pie', '-fno-exceptions', '-fno-rtti', '-mcmodel=kernel',
      '-mabi=sysv',
      '-mno-80387',
        '-mno-mmx',
        '-mno-3dnow',
        '-mno-sse',
        '-mno-sse2',
        '-mno-ssse3',
        '-mno-sse4',
        '-mno-sse4a',
        '-mno-sse4.1',
        '-mno-sse4.2',
        '-mno-avx',
        '-mno-avx2',
        '-mno-avx512f',
        '-mno-red-zone']

c_link_args = ['-target', 'x86_64-unknown-elf', '-Wl,-z,max-page-size=0x1000', '-Wl,--build-id=none', '-nostdlib', '-static']
cpp_link_args = ['-target', 'x86_64-unknown-elf', '-Wl,-z,max-page-size=0x1000', '-Wl,--build-id=none', '-nostdlib', '-static']

[host_machine]
system = 'nyx'
cpu_family = 'x86_64'
cpu = 'x86_64'
endian = 'little'
